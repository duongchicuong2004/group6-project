import jwt from "jsonwebtoken";
import User from "../models/User.js";

const SECRET_KEY = process.env.JWT_SECRET || "your_jwt_secret_key";

// üß© Ki·ªÉm tra token h·ª£p l·ªá
export const verifyToken = async (req, res, next) => {
  const authHeader = req.headers.authorization;

  if (!authHeader || !authHeader.startsWith("Bearer "))
    return res.status(401).json({ message: "Thi·∫øu token x√°c th·ª±c!" });

  const token = authHeader.split(" ")[1];
  try {
    const decoded = jwt.verify(token, SECRET_KEY);
    req.user = decoded; // { id, username, role }
    next();
  } catch (error) {
    res.status(403).json({ message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!" });
  }
};

// üëë Middleware ki·ªÉm tra quy·ªÅn Admin
export const isAdmin = async (req, res, next) => {
  try {
    const user = await User.findById(req.user.id);
    if (!user || user.role !== "Admin") {
      return res.status(403).json({ message: "Ch·ªâ Admin m·ªõi c√≥ quy·ªÅn truy c·∫≠p!" });
    }
    next();
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};
